{"version":3,"sources":["components/charts/composed/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","recharts__WEBPACK_IMPORTED_MODULE_1__","Graph","memo","_ref","data","area","firstBar","secondBar","line","a","createElement","className","strokeDasharray","dataKey","yAxisId","orientation","stroke","type","fill","barSize","legendType"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAuBMO,GAvBNP,EAAA,KAuB4CQ,eAAK,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,KAAMC,EAAfH,EAAeG,SAAUC,EAAzBJ,EAAyBI,UAAWC,EAApCL,EAAoCK,KAApC,OAC/CV,EAAAW,EAAAC,cAAA,OAAKC,UAAW,iBACdb,EAAAW,EAAAC,cAAA,OAAKC,UAAW,gBACdb,EAAAW,EAAAC,cAACV,EAAA,EAAD,KACEF,EAAAW,EAAAC,cAACV,EAAA,EAAD,CAAeI,KAAe,OAATA,EAAgB,GAAKA,GACxCN,EAAAW,EAAAC,cAACV,EAAA,EAAD,CAAeY,gBAAgB,QAC/Bd,EAAAW,EAAAC,cAACV,EAAA,EAAD,CAAOa,QAAQ,SACff,EAAAW,EAAAC,cAACV,EAAA,EAAD,MACAF,EAAAW,EAAAC,cAACV,EAAA,EAAD,CAAOc,QAAQ,OAAOC,YAAY,OAAOC,OAAO,YAChDlB,EAAAW,EAAAC,cAACV,EAAA,EAAD,CAAOc,QAAQ,QAAQC,YAAY,QAAQC,OAAO,YAClDlB,EAAAW,EAAAC,cAACV,EAAA,EAAD,MACAF,EAAAW,EAAAC,cAACV,EAAA,EAAD,MACAF,EAAAW,EAAAC,cAACV,EAAA,EAAD,CAAMc,QAAQ,OAAOG,KAAK,WAAWJ,QAASR,EAAMa,KAAK,UAAUF,OAAO,YAC1ElB,EAAAW,EAAAC,cAACV,EAAA,EAAD,CAAKc,QAAQ,OAAOD,QAASP,EAAUa,QAAS,GAAIH,OAAO,UAAUE,KAAK,YAC1EpB,EAAAW,EAAAC,cAACV,EAAA,EAAD,CAAKc,QAAQ,QAAQD,QAASN,EAAWY,QAAS,GAAIH,OAAO,UAAUE,KAAK,YAC5EpB,EAAAW,EAAAC,cAACV,EAAA,EAAD,CACEc,QAAQ,OACRG,KAAK,WACLJ,QAASL,EACTY,WAAW,OACXJ,OAAO,UACPE,KAAK,mBAQFjB","file":"static/js/5.d0c96063.chunk.js","sourcesContent":["import React, { NamedExoticComponent, memo } from 'react';\nimport {\n  ComposedChart,\n  ResponsiveContainer,\n  CartesianGrid,\n  XAxis,\n  Brush,\n  YAxis,\n  Tooltip,\n  Legend,\n  Area,\n  Line,\n  Bar\n} from 'recharts';\nimport './index.less';\ninterface IProps {\n  data: any[];\n  area: string;\n  line: string;\n  firstBar: string;\n  secondBar: string;\n}\n\nconst Graph: NamedExoticComponent<IProps> = memo(({ data, area, firstBar, secondBar, line }) => (\n  <div className={'overviewChart'}>\n    <div className={'chartContent'}>\n      <ResponsiveContainer>\n        <ComposedChart data={data === null ? [] : data}>\n          <CartesianGrid strokeDasharray='3 3' />\n          <XAxis dataKey='date' />\n          <Brush />\n          <YAxis yAxisId='left' orientation='left' stroke='#8884d8' />\n          <YAxis yAxisId='right' orientation='right' stroke='#45c1e1' />\n          <Tooltip />\n          <Legend />\n          <Area yAxisId='left' type='monotone' dataKey={area} fill='#8884d8' stroke='#9a7ecc' />\n          <Bar yAxisId='left' dataKey={firstBar} barSize={20} stroke='#be6eed' fill='#be6eed' />\n          <Bar yAxisId='right' dataKey={secondBar} barSize={20} stroke='#45c1e1' fill='#45c1e1' />\n          <Line\n            yAxisId='left'\n            type='monotone'\n            dataKey={line}\n            legendType='star'\n            stroke='#fdc430'\n            fill='#fdc430'\n          />\n        </ComposedChart>\n      </ResponsiveContainer>\n    </div>\n  </div>\n));\n\nexport default Graph;\n"],"sourceRoot":""}