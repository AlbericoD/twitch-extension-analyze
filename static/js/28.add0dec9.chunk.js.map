{"version":3,"sources":["containers/interaction.tsx"],"names":["GlobalCalendar","lazy","Promise","all","__webpack_require__","e","then","bind","TopRow","GraphComposed","GraphRadar","GraphLine","GraphBiaxial","GraphStackedArea","TabContent","TabPane","Monetization","memo","_ref","data","load","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","Fragment","react__WEBPACK_IMPORTED_MODULE_6__","fallback","_layout__WEBPACK_IMPORTED_MODULE_7__","antd_es_skeleton__WEBPACK_IMPORTED_MODULE_3__","active","antd_es_card__WEBPACK_IMPORTED_MODULE_1__","loading","bordered","bodyStyle","padding","className","antd_es_tabs__WEBPACK_IMPORTED_MODULE_5__","tabBarExtraContent","size","tabBarStyle","marginBottom","title","content","composed","area","line","firstBar","secondBar","radar","domains","radarA","name","value","radarB","radarC","radarD","firstLineA","secondLineA","thirdLineA","firstLineB","secondLineB","thirdLineB","firtArea","secondArea","thirdArea","fourthArea","makeContent","map","c","index","tab","key","concat","InteractionBox","connect","state","interaction"],"mappings":"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","file":"static/js/28.add0dec9.chunk.js","sourcesContent":["import React, { lazy, Suspense, memo, NamedExoticComponent, ReactNode } from 'react';\nimport { PageLoading } from '../layout';\nimport { AppState, IInteractionGraphs } from '../store';\nimport { connect } from 'react-redux';\nimport { Card, Tabs, Skeleton } from 'antd';\n\nconst GlobalCalendar = lazy(() => import('../components/global-calendar'));\nconst TopRow = lazy(() => import('../components/top-row/interaction'));\nconst GraphComposed = lazy(() => import('../components/charts/composed'));\nconst GraphRadar = lazy(() => import('../components/charts/radar'));\nconst GraphLine = lazy(() => import('../components/charts/line'));\nconst GraphBiaxial = lazy(() => import('../components/charts/biaxial'));\nconst GraphStackedArea = lazy(() => import('../components/charts/stacked-area'));\nconst TabContent = lazy(() => import('../components/tab-content'));\n\nconst { TabPane } = Tabs;\n\ninterface DispachProps {}\ninterface MapStateToProps {\n  load: boolean;\n  data: IInteractionGraphs;\n}\ntype Props = DispachProps & MapStateToProps;\n\ninterface ITabsContent {\n  title: string;\n  content: ReactNode;\n}\n\nconst makeContent = (data: IInteractionGraphs): ITabsContent[] => [\n  {\n    title: 'Composed',\n    content: (\n      <GraphComposed\n        data={data.composed}\n        area='uniqueInteractors'\n        line='interactionRate'\n        firstBar='minimizationRate'\n        secondBar='unminimizationRate'\n      />\n    )\n  },\n  {\n    title: 'Radar',\n    content: (\n      <GraphRadar\n        data={data.radar}\n        domains={'date'}\n        radarA={{ name: 'Clicks', value: 'clicks' }}\n        radarB={{ name: 'Clicks Per Interactor', value: 'clicksPerInteractor' }}\n        radarC={{ name: 'Mouse Enters', value: 'mouseEnters' }}\n        radarD={{ name: 'Mouse Enters Per Viewer', value: 'mouseentersPerViewer' }}\n      />\n    )\n  },\n  {\n    title: 'Line',\n    content: (\n      <GraphLine\n        data={data.line}\n        firstLineA='clicksPerInteractor'\n        secondLineA='mouseEntersPerView'\n        thirdLineA='uniqueInteractors'\n        firstLineB='clicks'\n        secondLineB='mouseEnters'\n        thirdLineB='minimizations'\n      />\n    )\n  },\n  {\n    title: 'Biaxial Line',\n    content: (\n      <GraphBiaxial\n        data={data.line}\n        firstLineA='clicksPerInteractor'\n        secondLineA='mouseEntersPerView'\n        thirdLineA='uniqueInteractors'\n        firstLineB='clicks'\n        secondLineB='mouseEnters'\n        thirdLineB='minimizations'\n      />\n    )\n  },\n  {\n    title: 'Stacked Area',\n    content: (\n      <GraphStackedArea\n        data={data.composed}\n        firtArea=''\n        secondArea='interactionRate'\n        thirdArea='minimizationRate'\n        fourthArea='unminimizationRate'\n      />\n    )\n  }\n];\n\nconst Monetization: NamedExoticComponent<Props> = memo(\n  ({ data, load }): JSX.Element => (\n    <>\n      <Suspense fallback={<PageLoading />}>\n        <TopRow />\n      </Suspense>\n      <Suspense fallback={<Skeleton active />}>\n        <Card loading={load} bordered={true} bodyStyle={{ padding: 0 }}>\n          <div className={'analyzeCard'}>\n            <Tabs\n              tabBarExtraContent={<GlobalCalendar />}\n              size='large'\n              tabBarStyle={{ marginBottom: 24 }}>\n              {data === null\n                ? null\n                : makeContent(data).map((c, index) => (\n                    <TabPane tab={c.title} key={`${index}`}>\n                      <Suspense fallback={<Skeleton active />}>\n                        <TabContent>{c.content}</TabContent>\n                      </Suspense>\n                    </TabPane>\n                  ))}\n            </Tabs>\n            ;\n          </div>\n        </Card>\n      </Suspense>\n    </>\n  )\n);\nconst mapStateToProps = (state: AppState): MapStateToProps => ({\n  data: state.interaction.data,\n  load: state.interaction.load\n});\n\nconst InteractionBox = connect(\n  mapStateToProps,\n  null\n)(Monetization);\n\nexport default memo(() => <InteractionBox />);\n"],"sourceRoot":""}