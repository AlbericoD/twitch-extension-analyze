{"version":3,"sources":["components/charts/chart-card/index.tsx","components/charts/chart-mini-area/index.tsx","components/charts/chart-mini-bar/index.tsx","components/charts/chart-mini-line/index.tsx","components/charts/trends/index.tsx","components/charts/index.tsx","components/top-row/live-actived-channels/index.tsx"],"names":["ChartCard","memo","_ref","children","title","loading","footer","value","action","react_default","a","createElement","card","bodyStyle","padding","className","style","height","undefined","CustomTooltip","active","payload","concat","date","MiniArea","_ref2","data","es6","content","props","chart_mini_area_CustomTooltip","type","dataKey","stroke","fill","MiniBar","chart_mini_bar_CustomTooltip","MiniLine","strokeWidth","chart_mini_line_CustomTooltip","Trend","_ref$colorful","colorful","_ref$reverseColor","reverseColor","flag","rest","Object","objectWithoutProperties","classString","classNames","trendItemGrey","assign","icon","__webpack_require__","d","__webpack_exports__","trends_Trend","topColResponsiveProps","xs","sm","md","lg","xl","marginBottom","TopRow","totalChannels","totalViewCount","react__WEBPACK_IMPORTED_MODULE_8___default","antd_es_row__WEBPACK_IMPORTED_MODULE_1__","gutter","antd_es_col__WEBPACK_IMPORTED_MODULE_3__","_charts__WEBPACK_IMPORTED_MODULE_9__","antd_es_statistic__WEBPACK_IMPORTED_MODULE_5__","Fragment","antd_es_tag__WEBPACK_IMPORTED_MODULE_7__","color"],"mappings":"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","file":"static/js/19.691b07a9.chunk.js","sourcesContent":["import React, { memo, ReactNode, FunctionComponent } from 'react';\nimport { Card } from 'antd';\nimport './index.less';\n\ninterface IChartCard {\n  children?: ReactNode;\n  title: string | JSX.Element;\n  loading: boolean;\n  footer?: JSX.Element;\n  value?: number | string | JSX.Element | null;\n  action?: JSX.Element | null;\n}\nexport const ChartCard: FunctionComponent<IChartCard> = memo(\n  ({ children, title, loading, footer, value, action }) => {\n    return (\n      <Card bodyStyle={{ padding: '20px 24px 8px 24px' }} loading={loading}>\n        <div className={'chartCard'}>\n          <div className={'chartTop chartTopMargin'}>\n            <div className={'metaWrap'}>\n              <div className={'meta'}>\n                <span className={'title'}>{title}</span>\n                <span className={'action'}>{action}</span>\n              </div>\n              <div className={'total'}>{value}</div>\n            </div>\n          </div>\n          {children && (\n            <div className={'content-mini'} style={{ height: 'auto' }}>\n              <div className={'contentHeight contentFixed'}>{children}</div>\n            </div>\n          )}\n          {footer !== undefined ? <div className={'footer footerMargin'}>{footer}</div> : null}\n        </div>\n      </Card>\n    );\n  }\n);\n","import React, { memo, NamedExoticComponent, FunctionComponent } from 'react';\nimport { AreaChart, Area, ResponsiveContainer, Tooltip } from 'recharts';\nimport '../index.less';\n\ninterface IData {\n  date: string;\n  value: number | string;\n}\ninterface IMiniArea {\n  data: IData[];\n}\n\ninterface ICustomToolTip {\n  active: boolean;\n  payload: any;\n}\n\nconst CustomTooltip: FunctionComponent<ICustomToolTip> = ({ active, payload }) => {\n  if (active) {\n    return (\n      <div className='custom-tooltip'>\n        <p className='label'>{`${payload[0].payload.date} : ${payload[0].value}`}</p>\n      </div>\n    );\n  }\n\n  return null;\n};\nexport const MiniArea: NamedExoticComponent<IMiniArea> = memo(({ data }) => {\n  return (\n    <div className={'miniChart'}>\n      <div className={'chartContent'}>\n        <ResponsiveContainer>\n          <AreaChart data={data}>\n            //@ts-ignore\n            <Tooltip content={props => <CustomTooltip {...props} />} />\n            <Area type='monotone' dataKey='value' stroke='#8884d8' fill='#8884d8' />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n});\n","import React, { memo, NamedExoticComponent, FunctionComponent } from 'react';\nimport { BarChart, Bar, Tooltip, ResponsiveContainer } from 'recharts';\nimport '../index.less';\n\ninterface IData {\n  date: string;\n  value: number | string;\n}\ninterface IMiniBar {\n  data: IData[];\n}\n\ninterface ICustomToolTip {\n  active: boolean;\n  payload: any;\n}\n\nconst CustomTooltip: FunctionComponent<ICustomToolTip> = ({ active, payload }) => {\n  if (active) {\n    return (\n      <div className='custom-tooltip'>\n        <p className='label'>{`${payload[0].payload.date} : ${payload[0].value}`}</p>\n      </div>\n    );\n  }\n\n  return null;\n};\nexport const MiniBar: NamedExoticComponent<IMiniBar> = memo(({ data }) => {\n  return (\n    <div className={'miniChart'}>\n      <div className={'chartContent'}>\n        <ResponsiveContainer>\n          <BarChart data={data}>\n            <Bar dataKey='value' fill='#8884d8' />\n            //@ts-ignore\n            <Tooltip content={props => <CustomTooltip {...props} />} />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n});\n","import React, { memo, NamedExoticComponent, FunctionComponent } from 'react';\nimport { Tooltip, LineChart, Line, ResponsiveContainer } from 'recharts';\nimport '../index.less';\ninterface IData {\n  date: string;\n  value: number | string;\n}\ninterface IMiniLine {\n  data: IData[];\n}\ninterface ICustomToolTip {\n  active: boolean;\n  payload: any;\n}\n\nconst CustomTooltip: FunctionComponent<ICustomToolTip> = ({ active, payload }) => {\n  if (active) {\n    return (\n      <div className='custom-tooltip'>\n        <p className='label'>{`${payload[0].payload.date} : ${payload[0].value}`}</p>\n      </div>\n    );\n  }\n\n  return null;\n};\nexport const MiniLine: NamedExoticComponent<IMiniLine> = memo(({ data }) => {\n  return (\n    <div className={'miniChart'}>\n      <div className={'chartContent'}>\n        <ResponsiveContainer>\n          <LineChart data={data}>\n            <Line type='monotone' dataKey='value' stroke='#8884d8' strokeWidth={2} />\n            //@ts-ignore\n            <Tooltip content={props => <CustomTooltip {...props} />} />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n});\n","import React, { ReactNode, FunctionComponent } from 'react';\nimport { Icon } from 'antd';\nimport classNames from 'classnames';\nimport './index.less';\ninterface ITrend {\n  colorful?: boolean;\n  reverseColor?: boolean;\n  flag: string;\n  children?: ReactNode;\n  className?: string;\n}\nexport const Trend: FunctionComponent<ITrend> = ({\n  colorful = true,\n  reverseColor = false,\n  flag,\n  children,\n  className,\n  ...rest\n}) => {\n  const classString = classNames(\n    'trendItem',\n    {\n      trendItemGrey: !colorful,\n      reverseColor: reverseColor && colorful\n    },\n    className\n  );\n  return (\n    <div {...rest} className={classString} title={typeof children === 'string' ? children : ''}>\n      <span>{children}</span>\n      {flag && (\n        <span className={flag}>\n          <Icon type={`caret-${flag}`} />\n        </span>\n      )}\n    </div>\n  );\n};\n","export * from './chart-card';\nexport * from './chart-field';\nexport * from './chart-mini-area';\nexport * from './chart-mini-bar';\nexport * from './chart-mini-line';\nexport * from './trends';\n","import React, { memo, NamedExoticComponent } from 'react';\nimport { Row, Col, Tag, Statistic } from 'antd';\nimport { ChartCard } from '../../charts';\n\nconst topColResponsiveProps = {\n  xs: 24,\n  sm: 12,\n  md: 12,\n  lg: 12,\n  xl: 12,\n  style: { marginBottom: 24 }\n};\ninterface IProps {\n  totalChannels: number;\n  totalViewCount: number;\n}\n\nconst TopRow: NamedExoticComponent<IProps> = memo(({ totalChannels, totalViewCount }) => (\n  <Row gutter={24}>\n    <Col {...topColResponsiveProps}>\n      <ChartCard\n        loading={false}\n        title={\n          <Statistic\n            title={\n              <>\n                <Tag color='purple'>Total</Tag>Channels\n              </>\n            }\n            value={totalChannels}\n          />\n        }>\n        {''}\n      </ChartCard>\n    </Col>\n    <Col {...topColResponsiveProps}>\n      <ChartCard\n        loading={false}\n        title={\n          <Statistic\n            title={\n              <>\n                <Tag color='purple'>Total</Tag>View count\n              </>\n            }\n            value={totalViewCount}\n          />\n        }>\n        {''}\n      </ChartCard>\n    </Col>\n  </Row>\n));\n\nexport default TopRow;\n"],"sourceRoot":""}