{"version":3,"sources":["store/index.ts","components/footer/index.tsx","components/header/index.tsx","store/csv/reducer.ts","store/overview/reducer.ts","store/monetization/reducer.ts","store/interaction/reducer.ts","components/svg/new-tab-link.tsx","components/table-channel.tsx","components/menu/sider/index.tsx","components/menu/index.tsx","store/csv/creators.ts","store/csv/actions.ts","store/csv/constants.ts","utils/make-ranges.ts","utils/csv-to-json.ts","utils/use-async-effect.ts","utils/process-overview.ts","utils/process-monetization.ts","utils/process-interation.ts","utils/index.ts","App.tsx","serviceWorker.ts","index.tsx","layout/basic-layout/index.tsx","layout/grid-content/index.tsx","layout/page-loading/index.tsx","layout/index.tsx","store/csv/index.ts","store/overview/index.ts","store/monetization/index.ts","store/interaction/index.ts","components/index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","store","redux__WEBPACK_IMPORTED_MODULE_0__","redux_thunk__WEBPACK_IMPORTED_MODULE_1__","_csv__WEBPACK_IMPORTED_MODULE_2__","_overview__WEBPACK_IMPORTED_MODULE_3__","_monetization__WEBPACK_IMPORTED_MODULE_4__","_interaction__WEBPACK_IMPORTED_MODULE_5__","o","rootReducer","combineReducers","csv","csvReducer","overview","overviewReducer","monetization","monetizationReducer","interaction","interactionReducer","createStore","applyMiddleware","thunk","GlobalFooter","_ref","links","copyright","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","className","map","link","key","title","target","blankTarget","href","Footer","FooterView","style","padding","antd_es_icon__WEBPACK_IMPORTED_MODULE_1__","type","react__WEBPACK_IMPORTED_MODULE_4__","Header","TopNavHeader","lazy","e","then","bind","HeaderView","react__WEBPACK_IMPORTED_MODULE_2___default","width","zIndex","react__WEBPACK_IMPORTED_MODULE_2__","fallback","initialState","fileReader","FileReader","load","uploadCSV","data","name","initialDateIndex","lastDateIndex","state","arguments","length","undefined","action","TOGGLE_LOAD","Object","_home_alberico_Documentos_Projetos_Twitch_Dashboard_twitch_extension_analyze_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","payload","HANDLE_FILE_CHOSEN","HANDLE_RANGE_PICKER","dataIndex","installs","bits","list","topRow","activeChannels","activations","uninstalls","mouseEnters","total","renderers","viewers","_DataPrgOverView$inst","DataPrgOverView","instance","process","service","reProcess","reSize","composed","radar","line","totalBitsUsed","bitsUsed","bitsPerTransaction","bitsTransactions","bitsRevenue","bitsUsedPerUser","bitsUsers","_DataPrgMonetization$","DataPrgMonetization","uniqueRenderers","totalUniqueRenderes","uniqueMinimizers","uniqueViewers","interactionRate","minimizationRate","unminimization","_DataPrgInteration$in","DataPrgInteration","newTabLink","react_default","height","version","viewBox","x","y","fillRule","Column","ChannelsList","Fragment","table","dataSource","loading","pagination","pageSize","sorter","b","username","toLocaleLowerCase","game","defaultSortOrder","parseInt","view_count","render","record","concat","icon","component","options","disable","Linkmenu","withRouter","props","location","menu","theme","mode","defaultSelectedKeys","selectedKeys","pathname","replace","option","Item","disabled","react_router_dom","to","Sider","collapsed","onCollapse","layout","collapsible","breakpoint","id","color","fontSize","margin","sider_Sider","toggleLoad","actions_fileChosen","actions_dataChosen","fileChosen","file","dispatch","creators","onloadend","result","content","csvToJSON","setTimeout","readAsText","dataChosen","forEach","date","ind","index","findIndex","item","Date","format","dateFormat","makeRanges","First Extension Release - Last Date CSV","moment","Last Day","Last 7 Days","Last 30 Days","lines","split","headers","i","obj","currentline","j","push","useAsyncEffect","effect","dependencies","useEffect","cleanupPromise","cleanup","classCallCheck","this","createClass","value","dateRange","slice","_calcGraphsInstalls","_calcGraphsBits","_makeList","_calcActiveChannels","_sum","_makeData","property","reverse","ext-details","ext-unique-details","bits-revenue","parseFloat","bits-per-transaction","reduce","previous","current","Activations","Installs","Uninstalls","uniquePageVisits","get","_instance","_calcGraphsComposed","_calcGraphsRadar","_calcGraphsLine","_calcTotalBitsused","_makeTopRow","int","uniqueInteractors","clicksPerInteractor","uniqueMinimizations","mouseEnterPerView","_calcUniqueRenderers","unminimizationRate","clicks","Clicks","Mouseenters","mouseentersPerViewer","mouseEntersPerView","minimizations","Minimizations","make_ranges_makeRanges","process_overview_DataPrgOverView","process_monetization_DataPrgMonetization","process_interation_DataPrgInteration","Upload","React","OverViewTab","Promise","all","MonetizationTab","LiveActivedChannelsTab","InteractionTab","App","es","basename","react","react_router","exact","path","Boolean","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Content","Basiclayout","children","_useState","useState","_useState2","slicedToArray","colladpsed","toggle","components","loadedCsv","minHeight","GridContent","PageLoading","paddingTop","textAlign","spin","size","basic_layout_Basiclayout","grid_content_GridContent","page_loading_PageLoading","_actions__WEBPACK_IMPORTED_MODULE_0__","_reducer__WEBPACK_IMPORTED_MODULE_1__","_reducer__WEBPACK_IMPORTED_MODULE_0__","_types__WEBPACK_IMPORTED_MODULE_1__","_types__WEBPACK_IMPORTED_MODULE_0__","_table_channel__WEBPACK_IMPORTED_MODULE_1__","_footer__WEBPACK_IMPORTED_MODULE_2__","_menu__WEBPACK_IMPORTED_MODULE_3__","_header__WEBPACK_IMPORTED_MODULE_4__"],"mappings":"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","file":"static/js/main.604b58b9.chunk.js","sourcesContent":["import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { csvReducer } from './csv';\nimport { overviewReducer } from './overview';\nimport { monetizationReducer } from './monetization';\nimport { interactionReducer } from './interaction';\n\nconst rootReducer = combineReducers({\n  csv: csvReducer,\n  overview: overviewReducer,\n  monetization: monetizationReducer,\n  interaction: interactionReducer\n});\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\nexport * from './csv';\nexport * from './overview';\nexport * from './monetization';\nexport * from './interaction';\n","import React, { Fragment, FunctionComponent } from 'react';\nimport { Layout, Icon } from 'antd';\nimport './index.less';\ninterface GlobalFooterProps {\n  links?: Array<{\n    key?: string;\n    title: React.ReactNode;\n    href: string;\n    blankTarget?: boolean;\n  }>;\n  copyright?: React.ReactNode;\n  style?: React.CSSProperties;\n}\n\nconst GlobalFooter: FunctionComponent<GlobalFooterProps> = ({ links, copyright }) => {\n  return (\n    <footer className='globalFooter'>\n      {links && (\n        <div className='links'>\n          {links.map(link => (\n            <a\n              key={link.key}\n              title={link.key}\n              target={link.blankTarget ? '_blank' : '_self'}\n              href={link.href}>\n              {link.title}\n            </a>\n          ))}\n        </div>\n      )}\n      {copyright && <div className='copyright'>{copyright}</div>}\n    </footer>\n  );\n};\n\nconst { Footer } = Layout;\nexport const FooterView = () => (\n  <Footer style={{ padding: 0 }}>\n    <GlobalFooter\n      links={[\n        {\n          key: 'Download',\n          title: 'Download CSV',\n          href: 'https://dev.twitch.tv/dashboard',\n          blankTarget: true\n        },\n        {\n          key: 'github',\n          title: <Icon type='github' />,\n          href: 'https://github.com/AlbericoD/twitch-extension-analyze',\n          blankTarget: true\n        },\n        {\n          key: 'Issues',\n          title: 'Issues',\n          href: 'https://github.com/AlbericoD/twitch-extension-analyze/issues',\n          blankTarget: true\n        }\n      ]}\n      copyright={\n        <Fragment>\n          Extension Analyze <Icon type='copyright' /> 2019\n        </Fragment>\n      }\n    />\n  </Footer>\n);\n","import React, { Suspense, lazy } from 'react';\nimport { Layout } from 'antd';\nimport './index.less';\n\nconst { Header } = Layout;\nconst TopNavHeader = lazy(() => import('../menu/top-nav-header'));\nexport const HeaderView = () => {\n  return (\n    <Header style={{ padding: 0, width: '100%', zIndex: 2 }} className={'fixedHeader'}>\n      <Suspense fallback={null}>\n        <TopNavHeader />\n      </Suspense>\n    </Header>\n  );\n};\n","import { ICSVState, CSVActionsType } from './types';\nimport { TOGGLE_LOAD, HANDLE_FILE_CHOSEN, HANDLE_RANGE_PICKER } from './constants';\n\nconst initialState: ICSVState = {\n  fileReader: new FileReader(),\n  load: false,\n  uploadCSV: false,\n  data: null,\n  name: 'Extension Name',\n  initialDateIndex: 0,\n  lastDateIndex: 0\n};\n\nexport function csvReducer(state = initialState, action: CSVActionsType): ICSVState {\n  switch (action.type) {\n    case TOGGLE_LOAD:\n      return {\n        ...state,\n        load: action.payload\n      };\n    case HANDLE_FILE_CHOSEN:\n      return {\n        ...state,\n        data: action.payload,\n        name: action.payload[0]['Extension Name'],\n        lastDateIndex: action.payload.length - 1,\n        uploadCSV: true,\n        load: true\n      };\n    case HANDLE_RANGE_PICKER:\n      const { dataIndex } = action.payload;\n      const { initialDateIndex, lastDateIndex } = dataIndex;\n      return {\n        ...state,\n        initialDateIndex,\n        lastDateIndex\n      };\n    default:\n      return state;\n  }\n}\n","import { IOverviewState, OverviewType } from './types';\nimport { TOGGLE_LOAD, HANDLE_FILE_CHOSEN, HANDLE_RANGE_PICKER } from '../csv/constants';\nimport { DataPrgOverView } from '../../utils';\n\nconst initialState: IOverviewState = {\n  load: false,\n  data: {\n    installs: [],\n    bits: []\n  },\n  list: [],\n  topRow: {\n    activeChannels: {\n      activations: 0,\n      installs: 0,\n      uninstalls: 0\n    },\n    mouseEnters: {\n      total: 0,\n      data: []\n    },\n    renderers: {\n      total: 0,\n      data: []\n    },\n    viewers: {\n      total: 0,\n      data: []\n    }\n  }\n};\n\nexport function overviewReducer(state = initialState, action: OverviewType): IOverviewState {\n  switch (action.type) {\n    case TOGGLE_LOAD:\n      return {\n        ...state,\n        load: action.payload\n      };\n    case HANDLE_FILE_CHOSEN:\n      const { data, topRow, list } = DataPrgOverView.instance.process(action.payload);\n      return {\n        ...state,\n        data,\n        list,\n        topRow\n      };\n    case HANDLE_RANGE_PICKER:\n      const service = DataPrgOverView.instance;\n      const reProcess = service.process(\n        service.reSize(action.payload.data, action.payload.dataIndex)\n      );\n      return {\n        ...state,\n        data: reProcess.data,\n        topRow: reProcess.topRow,\n        list: reProcess.list\n      };\n    default:\n      return state;\n  }\n}\n","import { IMonetizationState, MonetizationType } from './types';\nimport { TOGGLE_LOAD, HANDLE_FILE_CHOSEN, HANDLE_RANGE_PICKER } from '../csv/constants';\nimport { DataPrgMonetization } from '../../utils';\n\nconst initialState: IMonetizationState = {\n  load: false,\n  data: {\n    composed: [],\n    radar: [],\n    line: []\n  },\n  topRow: {\n    totalBitsUsed: {\n      bitsUsed: 0,\n      bitsPerTransaction: 0,\n      bitsTransactions: 0\n    },\n    bitsRevenue: {\n      data: [],\n      total: 0\n    },\n    bitsUsedPerUser: {\n      data: [],\n      total: 0\n    },\n    bitsUsers: {\n      data: [],\n      total: 0\n    }\n  }\n};\n\nexport function monetizationReducer(\n  state = initialState,\n  action: MonetizationType\n): IMonetizationState {\n  switch (action.type) {\n    case TOGGLE_LOAD:\n      return {\n        ...state,\n        load: action.payload\n      };\n    case HANDLE_FILE_CHOSEN:\n      const { data, topRow } = DataPrgMonetization.instance.process(action.payload);\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          composed: data.composed,\n          radar: data.radar,\n          line: data.line\n        },\n        topRow\n      };\n\n    case HANDLE_RANGE_PICKER:\n      const service = DataPrgMonetization.instance;\n      const reProcess = service.process(\n        service.reSize(action.payload.data, action.payload.dataIndex)\n      );\n      return {\n        ...state,\n        topRow: reProcess.topRow,\n        data: {\n          ...state.data,\n          composed: reProcess.data.composed,\n          radar: reProcess.data.radar,\n          line: reProcess.data.line\n        }\n      };\n    default:\n      return state;\n  }\n}\n","import { IInteractionState, InteractionType } from './types';\nimport { TOGGLE_LOAD, HANDLE_FILE_CHOSEN, HANDLE_RANGE_PICKER } from '../csv/constants';\nimport { DataPrgInteration } from '../../utils';\n\nconst initialState: IInteractionState = {\n  load: false,\n  data: {\n    composed: [],\n    line: [],\n    radar: []\n  },\n  topRow: {\n    uniqueRenderers: {\n      totalUniqueRenderes: 0,\n      uniqueMinimizers: 0,\n      uniqueViewers: 0\n    },\n    interactionRate: {\n      total: 0,\n      data: []\n    },\n    minimizationRate: {\n      total: 0,\n      data: []\n    },\n    unminimization: {\n      total: 0,\n      data: []\n    }\n  }\n};\n\nexport function interactionReducer(\n  state = initialState,\n  action: InteractionType\n): IInteractionState {\n  switch (action.type) {\n    case TOGGLE_LOAD:\n      return {\n        ...state,\n        load: action.payload\n      };\n    case HANDLE_FILE_CHOSEN:\n      const { data, topRow } = DataPrgInteration.instance.process(action.payload);\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          composed: data.composed,\n          radar: data.radar,\n          line: data.line\n        },\n        topRow\n      };\n\n    case HANDLE_RANGE_PICKER:\n      const service = DataPrgInteration.instance;\n      const reProcess = service.process(\n        service.reSize(action.payload.data, action.payload.dataIndex)\n      );\n      return {\n        ...state,\n        topRow: reProcess.topRow,\n        data: {\n          ...state.data,\n          composed: reProcess.data.composed,\n          radar: reProcess.data.radar,\n          line: reProcess.data.line\n        }\n      };\n    default:\n      return state;\n  }\n}\n","import React, { ReactElement } from 'react';\n\nexport const newTabLink = (): ReactElement<SVGAElement> => (\n  <svg\n    className='bits-icon__svg'\n    width='1.5em'\n    height='1.5em'\n    version='1.1'\n    viewBox='0 0 20 20'\n    x='0px'\n    y='0px'>\n    <path\n      d='M15 9.997a1 1 0 0 1 1 1v5.994a1 1 0 0 1-1.003 1.005H3.003A1 1 0 0 1 2 16.99V4.997a.999.999 0 0 1 1.003-1.001h5.994a1 1 0 1 1 0 2H4v10h10v-5a1 1 0 0 1 1-1zm2.704-7.704c.187.187.293.442.293.707v5.001a.999.999 0 0 1-1.707.707l-1.293-1.293-2.293 2.293a1 1 0 0 1-1.414 0l-1-1a1 1 0 0 1 0-1.415L12.583 5 11.29 3.708A1.002 1.002 0 0 1 11.997 2h5a1 1 0 0 1 .707.293z'\n      fillRule='evenodd'\n    />\n  </svg>\n);\n","import React from 'react';\nimport { Table, Icon } from 'antd';\nimport { IChannels } from '../containers';\nimport { newTabLink } from './svg';\nconst { Column } = Table;\n\ninterface IProps {\n  data: IChannels[];\n}\n\nexport const ChannelsList = ({ data }: IProps): JSX.Element => (\n  <>\n    <Table dataSource={data} loading={data.length == 0} pagination={{ pageSize: 8 }}>\n      <Column\n        title='Name'\n        dataIndex='username'\n        key='username'\n        sorter={(a: IChannels, b: IChannels) => {\n          if (a.username.toLocaleLowerCase() < b.username.toLocaleLowerCase()) return -1;\n          else if (a.username.toLocaleLowerCase() > b.username.toLocaleLowerCase()) return 1;\n          return 0;\n        }}\n      />\n      <Column\n        title='Game'\n        dataIndex='game'\n        key='game'\n        sorter={(a: IChannels, b: IChannels) => {\n          if (a.game.toLocaleLowerCase() < b.game.toLocaleLowerCase()) return -1;\n          else if (a.game.toLocaleLowerCase() > b.game.toLocaleLowerCase()) return 1;\n          return 0;\n        }}\n      />\n      <Column title='Title' dataIndex='title' key='title' />\n      <Column\n        title='View Count'\n        dataIndex='view_count'\n        key='view_count'\n        defaultSortOrder='descend'\n        sorter={(a: IChannels, b: IChannels) => parseInt(a.view_count) - parseInt(b.view_count)}\n      />\n\n      <Column\n        title='Live'\n        key='action'\n        render={(record: IChannels) => (\n          <span>\n            <a href={`https://www.twitch.tv/${record.username}`} target='__blank'>\n              <Icon component={newTabLink} />\n            </a>\n          </span>\n        )}\n      />\n    </Table>\n  </>\n);\n","import React from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport './index.less';\ninterface IProps {\n  collapsed: boolean;\n\n  onCollapse: (event: any) => void;\n  loadedCsv: boolean;\n}\ninterface IOptions {\n  key: string;\n  icon: string;\n  name: string;\n  disable: boolean;\n}\nconst options: IOptions[] = [\n  {\n    key: '/',\n    icon: 'upload',\n    name: 'Upload CSV',\n    disable: false\n  },\n  {\n    key: 'overview',\n    icon: 'dashboard',\n    name: 'Overview',\n    disable: false\n  },\n  {\n    key: 'monetization',\n    icon: 'line-chart',\n    name: 'Monetization Graph',\n    disable: false\n  },\n  {\n    key: 'activated',\n    icon: 'table',\n    name: 'Live Activated Channels',\n    disable: false\n  },\n  {\n    key: 'iteraction',\n    icon: 'area-chart',\n    name: 'Iteration Graph',\n    disable: false\n  },\n  {\n    key: 'installations',\n    icon: 'bar-chart',\n    name: 'Installations Graph ',\n    disable: true\n  }\n];\n\nconst Linkmenu = withRouter(props => {\n  const { location } = props;\n  return (\n    <Menu\n      theme='dark'\n      mode='inline'\n      defaultSelectedKeys={['upload-csv']}\n      selectedKeys={[\n        location.pathname === '/' ? location.pathname : location.pathname.replace('/', '')\n      ]}>\n      {options.map(option => (\n        <Menu.Item key={option.key} disabled={option.disable}>\n          <Icon type={option.icon} />\n          <span>{option.name}</span>\n          <Link to={option.key} />\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n});\nexport const Sider = ({ collapsed, onCollapse }: IProps): JSX.Element => (\n  <Layout.Sider\n    collapsible\n    collapsed={collapsed}\n    onCollapse={onCollapse}\n    breakpoint='lg'\n    width={256}\n    className={'sider'}\n    theme={'dark'}>\n    <div className='logo' id='logo'>\n      <a href='https://github.com/AlbericoD/twitch-extension-analyze' target='__blank'>\n        <Icon type='github' style={{ color: '#fff', fontSize: '1.5em', margin: '5px 6px' }} />\n      </a>\n    </div>\n\n    <Linkmenu />\n  </Layout.Sider>\n);\n","export * from './sider';\nexport * from './top';\n","import { TOGGLE_LOAD, HANDLE_FILE_CHOSEN, HANDLE_RANGE_PICKER } from './constants';\nimport { ITwitchExtensionPrimitiveCSV } from '../../components';\nimport { IParseData } from './types';\nexport function toggleLoad(load: boolean) {\n  return {\n    type: TOGGLE_LOAD,\n    payload: load\n  };\n}\nexport function handleFileChosen(file: ITwitchExtensionPrimitiveCSV[]) {\n  return {\n    type: HANDLE_FILE_CHOSEN,\n    payload: file\n  };\n}\nexport function handleDataChosen(dataIndex: IParseData, data: ITwitchExtensionPrimitiveCSV[]) {\n  return {\n    type: HANDLE_RANGE_PICKER,\n    payload: { dataIndex, data }\n  };\n}\n","import { AnyAction } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { AppState } from '../index';\nimport * as creators from './creators';\nimport { csvToJSON } from '../../utils';\nimport { RangePickerValue } from 'antd/lib/date-picker/interface';\n\nexport const toogleLoad = (\n  load: boolean\n): ThunkAction<void, AppState, {}, AnyAction> => dispatch => {\n  dispatch(creators.toggleLoad(load));\n};\n\nexport const fileChosen = (file: any): ThunkAction<void, AppState, {}, AnyAction> => (\n  dispatch,\n  state\n) => {\n  dispatch(toogleLoad(true));\n  const { fileReader } = state().csv;\n  fileReader.onloadend = () => {\n    if (typeof fileReader.result === 'string') {\n      const content: string = fileReader.result;\n      dispatch(creators.handleFileChosen(csvToJSON(content)));\n      setTimeout(() => {\n        dispatch(creators.toggleLoad(false));\n      }, 4000);\n    }\n  };\n  fileReader.readAsText(file);\n};\nexport const dataChosen = (props: RangePickerValue): ThunkAction<void, AppState, {}, AnyAction> => (\n  dispatch,\n  state\n) => {\n  const { data } = state().csv;\n  const dataIndex = {\n    initialDateIndex: 0,\n    lastDateIndex: 0\n  };\n  if (data !== null && props.length === 2) {\n    props.forEach((date, ind) => {\n      if (date !== undefined) {\n        const index = data.findIndex(item => item.Date === date.format('YYYY-MM-DD'));\n        if (index !== -1 && ind === 1) dataIndex.initialDateIndex = index;\n        if (index !== -1 && ind === 0) dataIndex.lastDateIndex = index;\n      }\n    });\n    dispatch(creators.handleDataChosen(dataIndex, data));\n  }\n};\n","export const TOGGLE_LOAD = 'TOGGLE_LOAD';\nexport const HANDLE_FILE_CHOSEN = 'NEW_FILE';\nexport const HANDLE_RANGE_PICKER = 'CHANGE_DATA_CALENDAR';\n","import { ITwitchExtensionPrimitiveCSV } from '../components';\nimport { RangePickerPresetRange } from 'antd/lib/date-picker/interface';\nimport moment from 'moment';\n\nconst dateFormat = 'YYYY/MM/DD';\n\ninterface IRange {\n  [range: string]: RangePickerPresetRange;\n}\nexport const makeRanges = (data: ITwitchExtensionPrimitiveCSV[]): IRange => {\n  if (data.length >= 0 && data.length <= 7) {\n    return {\n      'First Extension Release - Last Date CSV': [\n        moment(data[data.length - 1].Date, dateFormat),\n        moment(data[0].Date, dateFormat)\n      ],\n      'Last Day': [moment(data[0].Date, dateFormat), moment(data[0].Date, dateFormat)],\n      'Last 7 Days': [moment(data[7].Date, dateFormat), moment(data[0].Date, dateFormat)]\n    };\n  } else if (data.length >= 0 && data.length >= 30) {\n    return {\n      'First Extension Release - Last Date CSV': [\n        moment(data[data.length - 1].Date, dateFormat),\n        moment(data[0].Date, dateFormat)\n      ],\n      'Last Day': [moment(data[0].Date, dateFormat), moment(data[0].Date, dateFormat)],\n      'Last 7 Days': [moment(data[7].Date, dateFormat), moment(data[0].Date, dateFormat)],\n      'Last 30 Days': [moment(data[30].Date, dateFormat), moment(data[0].Date, dateFormat)]\n    };\n  } else {\n    return {\n      'First Extension Release - Last Date CSV': [\n        moment(data[data.length - 1].Date, dateFormat),\n        moment(data[0].Date, dateFormat)\n      ],\n      'Last Day': [moment(data[0].Date, dateFormat), moment(data[0].Date, dateFormat)]\n    };\n  }\n};\n","import { ITwitchExtensionPrimitiveCSV } from '../components';\n\nexport const csvToJSON = (csv: string): ITwitchExtensionPrimitiveCSV[] => {\n  const lines = csv.split('\\n');\n  const headers = lines[0].split(',');\n  let result: ITwitchExtensionPrimitiveCSV[] = [];\n\n  for (let i = 1; i < lines.length - 1; i++) {\n    let obj: any = {};\n    let currentline = lines[i].split(',');\n    for (let j = 0; j < headers.length; j++) {\n      if (currentline[j] !== undefined && currentline[j] !== '') obj[headers[j]] = currentline[j];\n    }\n    result.push(obj);\n  }\n  return result;\n};\n","import { useEffect } from 'react';\n\nexport function useAsyncEffect(effect: () => Promise<void | (() => void)>, dependencies?: any[]) {\n  return useEffect(() => {\n    const cleanupPromise = effect();\n    return () => {\n      cleanupPromise.then(cleanup => cleanup && cleanup());\n    };\n  }, dependencies);\n}\n","import { ITwitchExtensionPrimitiveCSV, CSVkey } from '../components';\nimport {\n  IGraph,\n  IGraphBits,\n  ITopRowOverview,\n  IDataGraphs,\n  IListOverview,\n  IParseData\n} from '../store';\nimport moment from 'moment';\n/**\n * Data Processing Overview\n */\ninterface IDataCharts {\n  installs: IGraph[];\n  bits: IGraphBits[];\n}\ninterface IData {\n  data: IDataCharts;\n  topRow: ITopRowOverview;\n  list: IListOverview[];\n}\nexport class DataPrgOverView {\n  private static _instance: DataPrgOverView = new DataPrgOverView();\n\n  static get instance(): DataPrgOverView {\n    return DataPrgOverView._instance;\n  }\n  public reSize(\n    csv: ITwitchExtensionPrimitiveCSV[] | null,\n    dateRange: IParseData\n  ): ITwitchExtensionPrimitiveCSV[] {\n    if (csv !== null && dateRange.lastDateIndex === 0 && dateRange.initialDateIndex === 0)\n      return [csv[0]];\n    else if (csv !== null) return csv.slice(dateRange.initialDateIndex, dateRange.lastDateIndex);\n    else return [];\n  }\n\n  public process(csv: ITwitchExtensionPrimitiveCSV[]): IData {\n    const data: IData = {\n      data: {\n        installs: this._calcGraphsInstalls(csv),\n        bits: this._calcGraphsBits(csv)\n      },\n      list: this._makeList(csv),\n      topRow: {\n        activeChannels: this._calcActiveChannels(csv),\n        mouseEnters: {\n          total: this._sum(csv, 'Unique Mouseenters'),\n          data: this._makeData(csv, 'Unique Mouseenters')\n        },\n        renderers: {\n          total: this._sum(csv, 'Unique Interactors'),\n          data: this._makeData(csv, 'Unique Interactors')\n        },\n        viewers: {\n          total: this._sum(csv, 'Unique Viewers'),\n          data: this._makeData(csv, 'Unique Viewers')\n        }\n      }\n    };\n    return data;\n  }\n  private _makeData(csv: ITwitchExtensionPrimitiveCSV[], property: CSVkey): IDataGraphs[] {\n    return csv\n      .map(value => {\n        return {\n          date: moment(value.Date, 'YYYY/MM/DD').format('L'),\n          value: parseInt(value[property])\n        };\n      })\n      .reverse();\n  }\n  private _makeList(csv: ITwitchExtensionPrimitiveCSV[]): IListOverview[] {\n    return csv.map((value, index) => ({\n      key: index,\n      date: moment(value.Date, 'YYYY/MM/DD').format('L'),\n      'ext-details': parseInt(value['Extension Details Page Visits']),\n      'ext-unique-details': parseInt(value['Unique Extension Details Page Visits']),\n      'bits-revenue': parseFloat(value['Bits Revenue USD']),\n      'bits-per-transaction': parseFloat(value['Bits Per Transaction'])\n    }));\n  }\n  private _sum(csv: ITwitchExtensionPrimitiveCSV[], property: CSVkey): number {\n    return csv\n      .map(item => parseInt(item[property]))\n      .reduce((previous, current) => previous + current, 0);\n  }\n  private _calcActiveChannels(\n    csv: ITwitchExtensionPrimitiveCSV[]\n  ): { activations: number; installs: number; uninstalls: number } {\n    return {\n      activations: this._sum(csv, 'Unique Active Channels'),\n      installs: this._sum(csv, 'Installs'),\n      uninstalls: this._sum(csv, 'Uninstalls')\n    };\n  }\n  private _calcGraphsInstalls(csv: ITwitchExtensionPrimitiveCSV[]): IGraph[] {\n    return csv\n      .map(value => ({\n        date: moment(value.Date, 'YYYY/MM/DD').format('L'),\n        activations: parseInt(value.Activations),\n        installs: parseInt(value.Installs),\n        uninstalls: parseInt(value.Uninstalls),\n        uniquePageVisits: parseInt(value['Unique Extension Details Page Visits'])\n      }))\n      .reverse();\n  }\n  private _calcGraphsBits(csv: ITwitchExtensionPrimitiveCSV[]): IGraphBits[] {\n    return csv\n      .map(value => ({\n        date: moment(value.Date, 'YYYY/MM/DD').format('L'),\n        bitsUsed: parseInt(value['Bits Used']),\n        bitsTransactions: parseInt(value['Bits Transactions']),\n        bitsUsedPerUser: parseFloat(value['Bits Used Per User'])\n      }))\n      .reverse();\n  }\n}\n","import { ITwitchExtensionPrimitiveCSV, CSVkey } from '../components';\nimport {\n  ITopRowMonetization,\n  IDataGraphs,\n  IParseData,\n  IGraphComposed,\n  IGraphRadar,\n  IGraphLine\n} from '../store';\nimport moment from 'moment';\n/**\n * Data Processing Overview\n */\ninterface IDataCharts {\n  composed: IGraphComposed[];\n  radar: IGraphRadar[];\n  line: IGraphLine[];\n}\ninterface IData {\n  data: IDataCharts;\n  topRow: ITopRowMonetization;\n}\nexport class DataPrgMonetization {\n  private static _instance: DataPrgMonetization = new DataPrgMonetization();\n\n  static get instance(): DataPrgMonetization {\n    return DataPrgMonetization._instance;\n  }\n  public reSize(\n    csv: ITwitchExtensionPrimitiveCSV[] | null,\n    dateRange: IParseData\n  ): ITwitchExtensionPrimitiveCSV[] {\n    if (csv !== null && dateRange.lastDateIndex === 0 && dateRange.initialDateIndex === 0)\n      return [csv[0]];\n    else if (csv !== null) return csv.slice(dateRange.initialDateIndex, dateRange.lastDateIndex);\n    else return [];\n  }\n\n  public process(csv: ITwitchExtensionPrimitiveCSV[]): IData {\n    const data: IData = {\n      data: {\n        composed: this._calcGraphsComposed(csv),\n        radar: this._calcGraphsRadar(csv),\n        line: this._calcGraphsLine(csv)\n      },\n      topRow: {\n        totalBitsUsed: this._calcTotalBitsused(csv),\n        bitsRevenue: this._makeTopRow(csv, 'Bits Revenue USD', false),\n        bitsUsedPerUser: this._makeTopRow(csv, 'Bits Used Per User', false),\n        bitsUsers: this._makeTopRow(csv, 'Unique Bits Users', false)\n      }\n    };\n    return data;\n  }\n  private _makeTopRow(\n    csv: ITwitchExtensionPrimitiveCSV[],\n    property: CSVkey,\n    int: boolean\n  ): { total: number; data: IDataGraphs[] } {\n    return {\n      total: this._sum(csv, property, int),\n      data: this._makeData(csv, property)\n    };\n  }\n  private _makeData(csv: ITwitchExtensionPrimitiveCSV[], property: CSVkey): IDataGraphs[] {\n    return csv\n      .map(value => {\n        return {\n          date: moment(value.Date, 'YYYY/MM/DD').format('L'),\n          value: parseInt(value[property])\n        };\n      })\n      .reverse();\n  }\n  private _sum(csv: ITwitchExtensionPrimitiveCSV[], property: CSVkey, int: boolean): number {\n    return csv\n      .map(item => {\n        if (int) return parseInt(item[property]) || 0;\n        return parseFloat(item[property]) || 0;\n      })\n      .reduce((previous, current) => previous + current, 0);\n  }\n  private _calcTotalBitsused(\n    csv: ITwitchExtensionPrimitiveCSV[]\n  ): { bitsUsed: number; bitsTransactions: number; bitsPerTransaction: number } {\n    return {\n      bitsUsed: this._sum(csv, 'Bits Used', false),\n      bitsPerTransaction: this._sum(csv, 'Bits Per Transaction', false),\n      bitsTransactions: this._sum(csv, 'Bits Transactions', true)\n    };\n  }\n  private _calcGraphsComposed(csv: ITwitchExtensionPrimitiveCSV[]): IGraphComposed[] {\n    return csv\n      .map(value => ({\n        date: moment(value.Date, 'YYYY/MM/DD').format('L'),\n        uniqueInteractors: parseInt(value['Unique Interactors']),\n        bitsTransactions: parseInt(value['Bits Transactions']),\n        bitsUsed: parseFloat(value['Bits Used']),\n        bitsUsedPerUser: parseFloat(value['Bits Used Per User'])\n      }))\n      .reverse();\n  }\n  private _calcGraphsRadar(csv: ITwitchExtensionPrimitiveCSV[]): IGraphRadar[] {\n    return csv\n      .map(value => ({\n        date: moment(value.Date, 'YYYY/MM/DD').format('L'),\n        clicksPerInteractor: parseInt(value['Clicks Per Interactor']),\n        bitsUsed: parseFloat(value['Bits Used']),\n        bitsUsedPerUser: parseFloat(value['Bits Used Per User']),\n        uniqueMinimizations: parseInt(value['Unique Minimizers'])\n      }))\n      .reverse();\n  }\n  private _calcGraphsLine(csv: ITwitchExtensionPrimitiveCSV[]): IGraphLine[] {\n    return csv\n      .map(value => ({\n        date: moment(value.Date, 'YYYY/MM/DD').format('L'),\n        clicksPerInteractor: parseInt(value['Clicks Per Interactor']),\n        uniqueMinimizations: parseInt(value['Unique Minimizers']),\n        mouseEnterPerView: parseInt(value['Mouseenters Per Viewer']),\n        bitsUsed: parseFloat(value['Bits Used']),\n        bitsUsedPerUser: parseFloat(value['Bits Used Per User']),\n        bitsTransactions: parseInt(value['Bits Transactions'])\n      }))\n      .reverse();\n  }\n}\n","import { ITwitchExtensionPrimitiveCSV, CSVkey } from '../components';\nimport {\n  ITopRowInteraction,\n  IDataGraphs,\n  IParseData,\n  IGraphRadarInteraction,\n  IGraphLineInteraction,\n  IGraphComposedInteraction\n} from '../store';\nimport moment from 'moment';\n/**\n * Data Processing Overview\n */\ninterface IDataCharts {\n  composed: IGraphComposedInteraction[];\n  radar: IGraphRadarInteraction[];\n  line: IGraphLineInteraction[];\n}\ninterface IData {\n  data: IDataCharts;\n  topRow: ITopRowInteraction;\n}\nexport class DataPrgInteration {\n  private static _instance: DataPrgInteration = new DataPrgInteration();\n\n  static get instance(): DataPrgInteration {\n    return DataPrgInteration._instance;\n  }\n  public reSize(\n    csv: ITwitchExtensionPrimitiveCSV[] | null,\n    dateRange: IParseData\n  ): ITwitchExtensionPrimitiveCSV[] {\n    if (csv !== null && dateRange.lastDateIndex === 0 && dateRange.initialDateIndex === 0)\n      return [csv[0]];\n    else if (csv !== null) return csv.slice(dateRange.initialDateIndex, dateRange.lastDateIndex);\n    else return [];\n  }\n\n  public process(csv: ITwitchExtensionPrimitiveCSV[]): IData {\n    const data: IData = {\n      data: {\n        composed: this._calcGraphsComposed(csv),\n        radar: this._calcGraphsRadar(csv),\n        line: this._calcGraphsLine(csv)\n      },\n      topRow: {\n        uniqueRenderers: this._calcUniqueRenderers(csv),\n        interactionRate: this._makeTopRow(csv, 'Interaction Rate', false),\n        minimizationRate: this._makeTopRow(csv, 'Minimization Rate', false),\n        unminimization: this._makeTopRow(csv, 'Unminimization Rate', false)\n      }\n    };\n    return data;\n  }\n  private _makeTopRow(\n    csv: ITwitchExtensionPrimitiveCSV[],\n    property: CSVkey,\n    int: boolean\n  ): { total: number; data: IDataGraphs[] } {\n    return {\n      total: this._sum(csv, property, int),\n      data: this._makeData(csv, property)\n    };\n  }\n  private _makeData(csv: ITwitchExtensionPrimitiveCSV[], property: CSVkey): IDataGraphs[] {\n    return csv\n      .map(value => {\n        return {\n          date: moment(value.Date, 'YYYY/MM/DD').format('L'),\n          value: parseInt(value[property])\n        };\n      })\n      .reverse();\n  }\n  private _sum(csv: ITwitchExtensionPrimitiveCSV[], property: CSVkey, int: boolean): number {\n    return csv\n      .map(item => {\n        if (int) return parseInt(item[property]) || 0;\n        return parseFloat(item[property]) || 0;\n      })\n      .reduce((previous, current) => previous + current, 0);\n  }\n  private _calcUniqueRenderers(\n    csv: ITwitchExtensionPrimitiveCSV[]\n  ): { totalUniqueRenderes: number; uniqueViewers: number; uniqueMinimizers: number } {\n    return {\n      totalUniqueRenderes: this._sum(csv, 'Unique Renderers', true),\n      uniqueViewers: this._sum(csv, 'Unique Viewers', true),\n      uniqueMinimizers: this._sum(csv, 'Unique Minimizers', true)\n    };\n  }\n  private _calcGraphsComposed(csv: ITwitchExtensionPrimitiveCSV[]): IGraphComposedInteraction[] {\n    return csv\n      .map(value => ({\n        date: moment(value.Date, 'YYYY/MM/DD').format('L'),\n        uniqueInteractors: parseInt(value['Unique Interactors']),\n        interactionRate: parseFloat(value['Interaction Rate']),\n        minimizationRate: parseFloat(value['Minimization Rate']),\n        unminimizationRate: parseFloat(value['Unminimization Rate'])\n      }))\n      .reverse();\n  }\n  private _calcGraphsRadar(csv: ITwitchExtensionPrimitiveCSV[]): IGraphRadarInteraction[] {\n    return csv\n      .map(value => ({\n        date: moment(value.Date, 'YYYY/MM/DD').format('L'),\n        clicks: parseInt(value.Clicks),\n        clicksPerInteractor: parseInt(value['Clicks Per Interactor']),\n        mouseEnters: parseInt(value.Mouseenters),\n        mouseentersPerViewer: parseInt(value['Mouseenters Per Viewer'])\n      }))\n      .reverse();\n  }\n  private _calcGraphsLine(csv: ITwitchExtensionPrimitiveCSV[]): IGraphLineInteraction[] {\n    return csv\n      .map(value => ({\n        date: moment(value.Date, 'YYYY/MM/DD').format('L'),\n        clicksPerInteractor: parseInt(value['Clicks Per Interactor']),\n        mouseEntersPerView: parseInt(value['Mouseenters Per Viewer']),\n        uniqueInteractors: parseInt(value['Unique Interactors']),\n        clicks: parseInt(value.Clicks),\n        mouseEnters: parseInt(value.Mouseenters),\n        minimizations: parseInt(value.Minimizations)\n      }))\n      .reverse();\n  }\n}\n","export * from './make-ranges';\nexport * from './csv-to-json';\nexport * from './use-async-effect';\nexport * from './process-overview';\nexport * from './process-monetization';\nexport * from './process-interation';\n","import React, { FunctionComponent, Suspense } from 'react';\nimport { Provider } from 'react-redux';\nimport { Basiclayout, GridContent, PageLoading } from './layout';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { store } from './store';\nimport './app.less';\n\nconst Upload = React.lazy(() => import('./containers/upload'));\nconst OverViewTab = React.lazy(() => import('./containers/overview'));\nconst MonetizationTab = React.lazy(() => import('./containers/monetization'));\nconst LiveActivedChannelsTab = React.lazy(() => import('./containers/live-activated-channels'));\nconst InteractionTab = React.lazy(() => import('./containers/interaction'));\n\nconst App: FunctionComponent = (): JSX.Element => (\n  <Provider store={store}>\n    <HashRouter basename='/'>\n      <Basiclayout>\n        <Suspense fallback={<PageLoading />}>\n          <GridContent>\n            <Route exact path='/' component={Upload} />\n            <Route path='/overview' component={OverViewTab} />\n            <Route path='/installations' component={() => <h1>installations</h1>} />\n            <Route path='/monetization' component={MonetizationTab} />\n            <Route path='/iteraction' component={InteractionTab} />\n            <Route path='/activated' component={LiveActivedChannelsTab} />\n          </GridContent>\n        </Suspense>\n      </Basiclayout>\n    </HashRouter>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { FunctionComponent, ReactNode, useEffect, useState } from 'react';\nimport { Layout } from 'antd';\nimport { Sider, HeaderView, FooterView } from '../../components';\nimport './index.less';\n\nconst { Content } = Layout;\ninterface IBasicLayout {\n  children: ReactNode;\n}\nexport const Basiclayout: FunctionComponent<IBasicLayout> = ({ children }): JSX.Element => {\n  const [colladpsed, toggle] = useState<boolean>(false);\n  useEffect(() => {\n    toggle(true);\n  }, []);\n  return (\n    <Layout>\n      <Sider collapsed={colladpsed} onCollapse={() => toggle(!colladpsed)} loadedCsv />\n\n      <Layout\n        style={{\n          minHeight: '100vh'\n        }}>\n        <HeaderView />\n        <Content className='content'>{children}</Content>\n        <FooterView />\n      </Layout>\n    </Layout>\n  );\n};\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport './index.less';\n\ninterface IGridContent {\n  children: ReactNode;\n}\nexport const GridContent: FunctionComponent<IGridContent> = ({ children }) => {\n  return <div className='main'>{children}</div>;\n};\n","import React from 'react';\nimport { Spin } from 'antd';\n\nexport const PageLoading = (): JSX.Element => (\n  <div style={{ paddingTop: 100, textAlign: 'center' }}>\n    <Spin size='large' />\n  </div>\n);\n","export * from './basic-layout';\nexport * from './grid-content';\nexport * from './page-loading';\n","export * from './actions';\nexport * from './reducer';\nexport * from './types';\n","export * from './reducer';\nexport * from './types';\n","export * from './reducer';\nexport * from './types';\n","export * from './reducer';\nexport * from './types';\n","export * from './types';\nexport * from './table-channel';\nexport * from './footer';\nexport * from './menu';\nexport * from './header';\n"],"sourceRoot":""}