{"version":3,"sources":["components/charts/chart-overview/composed-chart/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","recharts__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_2__","Graph","memo","_ref","data","a","createElement","className","strokeDasharray","dataKey","type","fill","stroke","legendType","barSize","GraphBox","connect","state","overview","installs"],"mappings":"iHAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAqBMQ,GArBNR,EAAA,KAqBsDS,eAAK,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACzDP,EAAAQ,EAAAC,cAAA,OAAKC,UAAW,iBACdV,EAAAQ,EAAAC,cAAA,OAAKC,UAAW,gBACdV,EAAAQ,EAAAC,cAACP,EAAA,EAAD,KACEF,EAAAQ,EAAAC,cAACP,EAAA,EAAD,CAAeK,KAAe,OAATA,EAAgB,GAAKA,GACxCP,EAAAQ,EAAAC,cAACP,EAAA,EAAD,CAAeS,gBAAgB,QAC/BX,EAAAQ,EAAAC,cAACP,EAAA,EAAD,CAAOU,QAAQ,SACfZ,EAAAQ,EAAAC,cAACP,EAAA,EAAD,MACAF,EAAAQ,EAAAC,cAACP,EAAA,EAAD,MACAF,EAAAQ,EAAAC,cAACP,EAAA,EAAD,MACAF,EAAAQ,EAAAC,cAACP,EAAA,EAAD,MACAF,EAAAQ,EAAAC,cAACP,EAAA,EAAD,CAAMW,KAAK,WAAWD,QAAQ,mBAAmBE,KAAK,UAAUC,OAAO,YAEvEf,EAAAQ,EAAAC,cAACP,EAAA,EAAD,CACEW,KAAK,WACLD,QAAQ,cACRI,WAAW,OACXD,OAAO,UACPD,KAAK,SAGPd,EAAAQ,EAAAC,cAACP,EAAA,EAAD,CAAKU,QAAQ,WAAWK,QAAS,GAAIF,OAAO,UAAUD,KAAK,YAC3Dd,EAAAQ,EAAAC,cAACP,EAAA,EAAD,CAAKU,QAAQ,aAAaK,QAAS,GAAIF,OAAO,UAAUD,KAAK,mBAWjEI,EAAWC,YAJO,SAACC,GAAD,MAAwC,CAC9Db,KAAMa,EAAMC,SAASd,KAAKe,WAK1B,KAFeH,CAGff,GAEaC,yBAAK,kBAAML,EAAAQ,EAAAC,cAACS,EAAD","file":"static/js/24.851f91dd.chunk.js","sourcesContent":["import React, { NamedExoticComponent, memo } from 'react';\nimport {\n  ComposedChart,\n  ResponsiveContainer,\n  CartesianGrid,\n  XAxis,\n  Brush,\n  YAxis,\n  Tooltip,\n  Legend,\n  Area,\n  Line,\n  Bar\n} from 'recharts';\nimport { AppState, IGraph } from '../../../../store';\nimport { connect } from 'react-redux';\nimport './index.less';\ninterface IMapStateToProps {\n  data: IGraph[] | null;\n}\n\nconst Graph: NamedExoticComponent<IMapStateToProps> = memo(({ data }) => (\n  <div className={'overviewChart'}>\n    <div className={'chartContent'}>\n      <ResponsiveContainer>\n        <ComposedChart data={data === null ? [] : data}>\n          <CartesianGrid strokeDasharray='3 3' />\n          <XAxis dataKey='date' />\n          <Brush />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Area type='monotone' dataKey='uniquePageVisits' fill='#8884d8' stroke='#9a7ecc' />\n\n          <Line\n            type='monotone'\n            dataKey='activations'\n            legendType='star'\n            stroke='#45c1e1'\n            fill='#fff'\n          />\n\n          <Bar dataKey='installs' barSize={20} stroke='#be6eed' fill='#be6eed' />\n          <Bar dataKey='uninstalls' barSize={20} stroke='#8365bf' fill='#8365bf' />\n        </ComposedChart>\n      </ResponsiveContainer>\n    </div>\n  </div>\n));\n\nconst mapStateToProps = (state: AppState): IMapStateToProps => ({\n  data: state.overview.data.installs\n});\n\nconst GraphBox = connect(\n  mapStateToProps,\n  null\n)(Graph);\n\nexport default memo(() => <GraphBox />);\n"],"sourceRoot":""}