{"version":3,"sources":["components/content.tsx","components/index.tsx","App.tsx","serviceWorker.ts","index.tsx","components/install-statistic.tsx","components/bits-statistic.tsx"],"names":["gridStyle","width","textAlign","boxShadow","gridStyleStatisc","background","border","statisticStyle","color","ContentBox","react__WEBPACK_IMPORTED_MODULE_12___default","a","createElement","antd_es_card__WEBPACK_IMPORTED_MODULE_3__","style","margin","paddingTop","Grid","antd_es_row__WEBPACK_IMPORTED_MODULE_5__","gutter","antd_es_col__WEBPACK_IMPORTED_MODULE_7__","span","antd_es_statistic__WEBPACK_IMPORTED_MODULE_9__","title","value","precision","valueStyle","prefix","antd_es_icon__WEBPACK_IMPORTED_MODULE_11__","type","suffix","antd_es_divider__WEBPACK_IMPORTED_MODULE_1__","_install_statistic__WEBPACK_IMPORTED_MODULE_13__","_bits_statistic__WEBPACK_IMPORTED_MODULE_14__","__webpack_require__","_types__WEBPACK_IMPORTED_MODULE_1__","o","d","__webpack_exports__","_content__WEBPACK_IMPORTED_MODULE_3__","Header","Content","Footer","App","react_default","layout","icon","fontSize","marginLeft","components","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","data","name","install","uinstall","activations","StatisticInstall","_PureComponent","Object","_home_alberico_Documentos_Projetos_Twitch_Dashboard_twitch_extension_analyze_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_alberico_Documentos_Projetos_Twitch_Dashboard_twitch_extension_analyze_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_alberico_Documentos_Projetos_Twitch_Dashboard_twitch_extension_analyze_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","_home_alberico_Documentos_Projetos_Twitch_Dashboard_twitch_extension_analyze_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_alberico_Documentos_Projetos_Twitch_Dashboard_twitch_extension_analyze_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","react__WEBPACK_IMPORTED_MODULE_5___default","recharts__WEBPACK_IMPORTED_MODULE_6__","aspect","strokeDasharray","dataKey","fill","PureComponent","jsfiddleUrl","uv","pv","amt","cnt","StatisticBits","stroke","barSize"],"mappings":"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","file":"static/js/main.70b46af1.chunk.js","sourcesContent":["import React, { CSSProperties } from 'react';\nimport { Card, Statistic, Row, Col, Divider, Icon } from 'antd';\nimport { StatisticInstall } from './install-statistic';\nimport { ImportTwitchCSV } from './upload-csv';\nimport { StatisticBits } from './bits-statistic';\n\nconst gridStyle: CSSProperties = {\n  width: '50%',\n  textAlign: 'center',\n  boxShadow:\n    '0 2px 4px -1px rgba(0,0,0,.34),0 2px 2px -2px rgba(0,0,0,.26),0 1px 4px 0 rgba(0,0,0,.28)'\n};\nconst gridStyleStatisc: CSSProperties = {\n  width: '100%',\n  textAlign: 'center',\n  background: '#19171c',\n  border: '1px solid hsla(0,0%,100%,.05)',\n  boxShadow:\n    '0 2px 4px -1px rgba(0,0,0,.34),0 2px 2px -2px rgba(0,0,0,.26),0 1px 4px 0 rgba(0,0,0,.28)'\n};\nconst statisticStyle: CSSProperties = {\n  color: '#faf9fa'\n};\nexport const ContentBox = (): JSX.Element => (\n  <Card\n    style={{\n      margin: 16,\n      paddingTop: 40,\n      background: '#0f0e11',\n      border: '1px solid hsla(0,0%,100%,.09)',\n      boxShadow:\n        '0 2px 4px -1px hsla(0,0%,100%,.05),0 2px 2px -2px hsla(0,0%,100%,.05),0 1px 4px 0 hsla(0,0%,100%,.05)'\n    }}>\n    <Card.Grid style={gridStyleStatisc}>\n      <Row gutter={16}>\n        <Col span={6}>\n          <Statistic\n            style={statisticStyle}\n            title='Unique Interactors Last 7 Days'\n            value={11.28}\n            precision={2}\n            valueStyle={{ color: '#b19dd8' }}\n            prefix={<Icon type='select' />}\n          />\n        </Col>\n        <Col span={6}>\n          <Statistic\n            style={statisticStyle}\n            title='Unique Renderers Last 7 Days'\n            value={11.28}\n            precision={0}\n            valueStyle={{ color: '#b19dd8' }}\n            prefix={<Icon type='stock' />}\n          />\n        </Col>\n        <Col span={6}>\n          <Statistic\n            style={statisticStyle}\n            title='Unique Viewers Last 7 Days'\n            value={11.28}\n            valueStyle={{ color: '#b19dd8' }}\n            precision={0}\n            prefix={<Icon type='eye' />}\n          />\n        </Col>\n        <Col span={6}>\n          <Statistic\n            style={statisticStyle}\n            title='Unique Mouseenters Last 7 Days'\n            value={11.28}\n            precision={0}\n            valueStyle={{ color: '#b19dd8' }}\n            prefix={<Icon type='heart' />}\n          />\n        </Col>\n      </Row>\n    </Card.Grid>\n    <Card.Grid style={gridStyle}>\n      <Row gutter={16}>\n        <Col span={12}>\n          <Card.Grid style={gridStyleStatisc}>\n            <Statistic\n              title='Activations (AVG)'\n              value={112893}\n              valueStyle={{ color: '#b19dd8' }}\n              precision={2}\n              style={statisticStyle}\n            />\n          </Card.Grid>\n        </Col>\n        <Col span={12}>\n          <Card.Grid style={gridStyleStatisc}>\n            <Statistic\n              valueStyle={{ color: '#b19dd8' }}\n              title='Uninstalls (AVG)'\n              value={10}\n              suffix='/ 20'\n              style={statisticStyle}\n            />\n          </Card.Grid>\n        </Col>\n\n        <Divider style={{ background: 'hsla(0,0%,100%,.05)' }} />\n        <Col span={24}>\n          <StatisticInstall />\n        </Col>\n      </Row>\n    </Card.Grid>\n    <Card.Grid style={gridStyle}>\n      <Row gutter={16}>\n        <Col span={12}>\n          <Card.Grid style={gridStyleStatisc}>\n            <Statistic\n              title='Bits Revenue (USD)'\n              value={1128}\n              prefix={<Icon type='dollar' />}\n              valueStyle={{ color: '#b19dd8' }}\n              style={statisticStyle}\n            />\n          </Card.Grid>\n        </Col>\n        <Col span={12}>\n          <Card.Grid style={gridStyleStatisc}>\n            <Statistic\n              title='Bits Transactions (BITS)'\n              value={1128}\n              valueStyle={{ color: '#b19dd8' }}\n              prefix={<Icon type='like' />}\n              style={statisticStyle}\n            />\n          </Card.Grid>\n        </Col>\n        <Divider style={{ background: 'hsla(0,0%,100%,.05)' }} />\n        <Col span={24}>\n          <StatisticBits />\n        </Col>\n      </Row>\n    </Card.Grid>\n  </Card>\n);\n","export * from './upload-csv';\nexport * from './types';\nexport * from './install-statistic';\nexport * from './content';\nexport * from './bits-statistic';\n","import React, { Component } from 'react';\nimport { ImportTwitchCSV, StatisticInstall, ContentBox } from './components/index';\nimport { Layout, Icon } from 'antd';\n\nconst { Header, Footer, Content } = Layout;\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        <Header\n          style={{\n            background: '#6441a4'\n          }}>\n          <Icon type='github' style={{ color: '#fff', fontSize: '3em', margin: 10 }} />\n\n          <Icon type='medium' style={{ color: '#fff', fontSize: '3em', marginLeft: '85%' }} />\n          <Icon type='linkedin' style={{ color: '#fff', fontSize: '3em', marginLeft: '5%' }} />\n        </Header>\n        <Content>\n          <ContentBox />\n        </Content>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { PureComponent } from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\n\nconst data = [\n  {\n    name: 'Dia 1',\n    install: 4000,\n    uinstall: 2400,\n    activations: 2400\n  },\n  {\n    name: 'Dia 2',\n    install: 4000,\n    uinstall: 2400,\n    activations: 2400\n  },\n  {\n    name: 'Dia 3',\n    install: 4000,\n    uinstall: 2400,\n    activations: 2400\n  },\n  {\n    name: 'Dia 4',\n    install: 4000,\n    uinstall: 2400,\n    activations: 2400\n  },\n  {\n    name: 'Dia 5',\n    install: 4000,\n    uinstall: 2400,\n    activations: 2400\n  },\n  {\n    name: 'Dia 6',\n    install: 4000,\n    uinstall: 2400,\n    activations: 2400\n  },\n  {\n    name: 'Dia 7',\n    install: 4000,\n    uinstall: 2400,\n    activations: 2400\n  }\n];\n\nexport class StatisticInstall extends PureComponent {\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/q4eonc12/';\n\n  render() {\n    return (\n      <ResponsiveContainer width='100%' aspect={3.0 / 2.0}>\n        <BarChart data={data}>\n          <CartesianGrid strokeDasharray='3 3' />\n          <XAxis dataKey='name' />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey='install' fill='#8884d8' background={{ fill: '#eee' }} />\n          <Bar dataKey='uinstall' fill='#82ca9d' />\n          <Bar dataKey='activations' fill='red' />\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  ComposedChart,\n  Line,\n  Area,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\n\nconst data = [\n  {\n    name: 'Page A',\n    uv: 590,\n    pv: 800,\n    amt: 1400,\n    cnt: 490\n  },\n  {\n    name: 'Page B',\n    uv: 868,\n    pv: 967,\n    amt: 1506,\n    cnt: 590\n  },\n  {\n    name: 'Page C',\n    uv: 1397,\n    pv: 1098,\n    amt: 989,\n    cnt: 350\n  },\n  {\n    name: 'Page D',\n    uv: 1480,\n    pv: 1200,\n    amt: 1228,\n    cnt: 480\n  },\n  {\n    name: 'Page E',\n    uv: 1520,\n    pv: 1108,\n    amt: 1100,\n    cnt: 460\n  },\n  {\n    name: 'Page F',\n    uv: 1400,\n    pv: 680,\n    amt: 1700,\n    cnt: 380\n  }\n];\n\nexport class StatisticBits extends PureComponent {\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/9xopwa9v/';\n\n  render() {\n    return (\n      <ResponsiveContainer width='100%' aspect={3.0 / 2.0}>\n        <ComposedChart data={data}>\n          <CartesianGrid stroke='#f5f5f5' />\n          <XAxis dataKey='name' />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Area type='monotone' dataKey='amt' fill='#8884d8' stroke='#8884d8' />\n          <Bar dataKey='pv' barSize={20} fill='#413ea0' />\n          <Line type='monotone' dataKey='uv' stroke='#ff7300' />\n          {/* <Scatter dataKey=\"cnt\" fill=\"red\" /> */}\n        </ComposedChart>\n      </ResponsiveContainer>\n    );\n  }\n}\n"],"sourceRoot":""}