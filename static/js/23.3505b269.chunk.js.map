{"version":3,"sources":["components/charts/chart-overview/bits-composed-chart/index.tsx"],"names":["Graph","memo","_ref","data","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","antd_es_card__WEBPACK_IMPORTED_MODULE_1__","className","recharts__WEBPACK_IMPORTED_MODULE_3__","strokeDasharray","dataKey","yAxisId","orientation","stroke","fill","type","GraphBox","connect","state","overview","bits"],"mappings":"8KAqBMA,UAAgDC,eAAK,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACzDC,EAAAC,EAAAC,cAAAC,EAAA,OACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAW,iBACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAW,gBACdJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAeN,KAAe,OAATA,EAAgB,GAAKA,GACxCC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAeC,gBAAgB,QAC/BN,EAAAC,EAAAC,cAACG,EAAA,EAAD,MACAL,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOE,QAAQ,SACfP,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOG,QAAQ,OAAOC,YAAY,OAAOC,OAAO,YAChDV,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOG,QAAQ,QAAQC,YAAY,QAAQC,OAAO,YAClDV,EAAAC,EAAAC,cAACG,EAAA,EAAD,MACAL,EAAAC,EAAAC,cAACG,EAAA,EAAD,MACAL,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKG,QAAQ,OAAOD,QAAQ,kBAAkBI,KAAK,YACnDX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKG,QAAQ,QAAQD,QAAQ,mBAAmBI,KAAK,YACrDX,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMG,QAAQ,OAAOI,KAAK,WAAWL,QAAQ,WAAWI,KAAK,OAAOD,OAAO,oBAYjFG,EAAWC,YAJO,SAACC,GAAD,MAAwC,CAC9DhB,KAAMgB,EAAMC,SAASjB,KAAKkB,OAK1B,KAFeH,CAGflB,GAEaC,yBAAK,kBAAMG,EAAAC,EAAAC,cAACW,EAAD","file":"static/js/23.3505b269.chunk.js","sourcesContent":["import React, { NamedExoticComponent, memo } from 'react';\nimport {\n  ResponsiveContainer,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Bar,\n  ComposedChart,\n  Brush,\n  Line\n} from 'recharts';\nimport { AppState, IGraphBits } from '../../../../store';\nimport { connect } from 'react-redux';\nimport '../composed-chart/index.less';\nimport { Card } from 'antd';\ninterface IMapStateToProps {\n  data: IGraphBits[] | null;\n}\n\nconst Graph: NamedExoticComponent<IMapStateToProps> = memo(({ data }) => (\n  <Card>\n    <div className={'overviewChart'}>\n      <div className={'chartContent'}>\n        <ResponsiveContainer>\n          <ComposedChart data={data === null ? [] : data}>\n            <CartesianGrid strokeDasharray='3 3' />\n            <Brush />\n            <XAxis dataKey='date' />\n            <YAxis yAxisId='left' orientation='left' stroke='#8884d8' />\n            <YAxis yAxisId='right' orientation='right' stroke='#45c1e1' />\n            <Tooltip />\n            <Legend />\n            <Bar yAxisId='left' dataKey='bitsUsedPerUser' fill='#8884d8' />\n            <Bar yAxisId='right' dataKey='bitsTransactions' fill='#45c1e1' />\n            <Line yAxisId='left' type='monotone' dataKey='bitsUsed' fill='#fff' stroke='#be6eed' />\n          </ComposedChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  </Card>\n));\n\nconst mapStateToProps = (state: AppState): IMapStateToProps => ({\n  data: state.overview.data.bits\n});\n\nconst GraphBox = connect(\n  mapStateToProps,\n  null\n)(Graph);\n\nexport default memo(() => <GraphBox />);\n"],"sourceRoot":""}